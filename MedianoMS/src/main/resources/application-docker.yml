spring:
  application:
    name: enanos-service

  datasource:
    url: jdbc:postgresql://postgres:5432/microservicios_db?currentSchema=enanos_schema
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: enanos_schema

server:
  port: 8081

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: false
    hostname: enanos-service

resilience4j:
  circuitbreaker:
    instances:
      photosClient:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
  retry:
    instances:
      photosClient:
        max-attempts: 2
        wait-duration: 500ms
  timelimiter:
    instances:
      photosClient:
        timeout-duration: 5s

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakers
  endpoint:
    health:
      show-details: always

logging:
  level:
    io.github.resilience4j: INFO